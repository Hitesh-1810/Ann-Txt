import numpy as np
import matplotlib.pyplot as plt

# Define the input data
X = np.array([[2, 2], [4, 2], [2, 4], [4, 4], [1, 1], [3, 1], [1, 3], [3, 3]])
y = np.array([-1, -1, -1, -1, 1, 1, 1, 1])

# Initialize weights and bias
w = np.zeros(2)
b = 0

# Define the learning rate
learning_rate = 0.1

# Define the number of epochs
num_epochs = 10



# Perceptron learning algorithm
for _ in range(num_epochs):
    for i in range(len(X)):
        x = X[i]
        target = y[i]
        activation = np.dot(w, x) + b
        if activation * target <= 0:
            w += learning_rate * target * x
            b += learning_rate * target



# Plot the decision regions
x_min, x_max = X[:, 0].min() - 1, X[:, 0].max() + 1
y_min, y_max = X[:, 1].min() - 1, X[:, 1].max() + 1
xx, yy = np.meshgrid(np.arange(x_min, x_max, 0.1),
                     np.arange(y_min, y_max, 0.1))
Z = np.sign(np.dot(np.c_[xx.ravel(), yy.ravel()], w) + b)
Z = Z.reshape(xx.shape)

plt.contourf(xx, yy, Z, alpha=0.4)
plt.scatter(X[:, 0], X[:, 1], c=y)
plt.xlabel('X1')
plt.ylabel('X2')
plt.title('Perceptron Decision Regions')
plt.show()